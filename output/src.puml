' Generated by UML Generator
' Encoded: rLTDRzim3BtxL-Zeh7FGOhTW2zeX69QX1GPaEmqxC3BdQ94jGv9JT5tpsoTRbYr_PS201SYjVO-aHFAHLcwL1gcBb0Tgpx8S9AI4Sb3gJcl9jeN6DHNPXlr2SXtiM8o4Caav1a5bHLQYs7ByLAJv2gcGe8Kapm4XLmdgZmXSxzwBh53XR45OfcjYeoLcoJYL8yOD7bVHWnTtsWScyG4a4_QCL1mmJCl_5wI2ZSj1iBZaVfehJN6WDT3z5AjXZoj88PcCJGNdIFLdyOZoQ_UKroItw8BKjFDha-1FB4lEKQurlVnghRC3ooWpURMfHBd40nE5scZGMCUg_Yx9g3oqvnPEUimkjpGFm3BRscSpnPhH5v8QA0IPg0KngZ4o-_PznAsfenghdpB2n4fav9qPUeDmTa3ba3ULJQax9pW3tiolRJohL6TxKuAxIjSTA7RYDr7lcT9lwnIReLWQommVoPsKy5HPBCDPqrpRqgfpgXmFS_5ma8fNviGPpNgvNa4SDsU6pQsQaZTSDzWNeO7RSUsEOqMuSHsZoh9va-garvVRK6BZifgMqfHuwcgKBVRkfnpKzhxhS5ygeEjWeLOQlHE6cIg7TiJJRzEWTif3E_hgUWxQeHhC4w3d4pELStWgfM2tfviIOuRo1r3qj5ADo_74cZYUM1F7aslY-DSrSVpNDG5RKp2WsdxH1wB-Zr-UpOuXZyzoKWgSN_nNhivHA7sMcXKvoWkksTYZCuf-BmSA3ze7utnkU6_v-qnD1FsNsNZCvbNL3-aHBcB_zJ9mwV6lekWKtGOUDRUWCE3WqjugQuFqftGyNs_2-jVlK4tK4IrFH6vrE8ZiKoxoBMQn-Qdo1m
' URL: http://www.plantuml.com/plantuml/uml/rLTDRzim3BtxL-Zeh7FGOhTW2zeX69QX1GPaEmqxC3BdQ94jGv9JT5tpsoTRbYr_PS201SYjVO-aHFAHLcwL1gcBb0Tgpx8S9AI4Sb3gJcl9jeN6DHNPXlr2SXtiM8o4Caav1a5bHLQYs7ByLAJv2gcGe8Kapm4XLmdgZmXSxzwBh53XR45OfcjYeoLcoJYL8yOD7bVHWnTtsWScyG4a4_QCL1mmJCl_5wI2ZSj1iBZaVfehJN6WDT3z5AjXZoj88PcCJGNdIFLdyOZoQ_UKroItw8BKjFDha-1FB4lEKQurlVnghRC3ooWpURMfHBd40nE5scZGMCUg_Yx9g3oqvnPEUimkjpGFm3BRscSpnPhH5v8QA0IPg0KngZ4o-_PznAsfenghdpB2n4fav9qPUeDmTa3ba3ULJQax9pW3tiolRJohL6TxKuAxIjSTA7RYDr7lcT9lwnIReLWQommVoPsKy5HPBCDPqrpRqgfpgXmFS_5ma8fNviGPpNgvNa4SDsU6pQsQaZTSDzWNeO7RSUsEOqMuSHsZoh9va-garvVRK6BZifgMqfHuwcgKBVRkfnpKzhxhS5ygeEjWeLOQlHE6cIg7TiJJRzEWTif3E_hgUWxQeHhC4w3d4pELStWgfM2tfviIOuRo1r3qj5ADo_74cZYUM1F7aslY-DSrSVpNDG5RKp2WsdxH1wB-Zr-UpOuXZyzoKWgSN_nNhivHA7sMcXKvoWkksTYZCuf-BmSA3ze7utnkU6_v-qnD1FsNsNZCvbNL3-aHBcB_zJ9mwV6lekWKtGOUDRUWCE3WqjugQuFqftGyNs_2-jVlK4tK4IrFH6vrE8ZiKoxoBMQn-Qdo1m
' Generated on: 2025-08-31T10:42:49.795826

@startuml
skinparam classAttributeIconSize 0
hide circle

class DoubleJumpDecorator {
  +getHealthBonus(): int
  +getStrengthBonus(): int
  +getSpeedBonus(): double
}

class FireMario {
  +move(mario: Mario): void
  +jump(mario: Mario): void
  +attack(mario: Mario): void
  +takeDamage(mario: Mario): void
  +collectPowerUp(mario: Mario, powerUp: PowerUp): void
}

class FlyingDecorator {
  +getHealthBonus(): int
  +getStrengthBonus(): int
  +getSpeedBonus(): double
}

class IceMario {
  +move(mario: Mario): void
  +jump(mario: Mario): void
  +attack(mario: Mario): void
  +takeDamage(mario: Mario): void
  +collectPowerUp(mario: Mario, powerUp: PowerUp): void
}

class InvincibleMario {
  -previousState: MarioState
  --
  +InvincibleMario(previousState: MarioState)
  +move(mario: Mario): void
  +jump(mario: Mario): void
  +attack(mario: Mario): void
  +takeDamage(mario: Mario): void
  +collectPowerUp(mario: Mario, powerUp: PowerUp): void
}


class Mario {
  -state: MarioState
  -score: int = 0
  -lives: int = 3
  -speed: double = 1.0
  -strength: int = 1
  -health: int = 1
  -decorators: List<PowerUpDecorator> = new ArrayList<>()
  --
  +Mario()
  +setState(state: MarioState): void
  +getState(): MarioState
  +addDecorator(decorator: PowerUpDecorator): void
  +getTotalHealth(): int
  +getTotalStrength(): int
  +getTotalSpeed(): double
  +move(): void
  +jump(): void
  +attack(): void
  +takeDamage(): void
  +collectPowerUp(powerUp: PowerUp): void
  +getScore(): int
  +setScore(score: int): void
  +getLives(): int
  +setLives(lives: int): void
  +getSpeed(): double
  +setSpeed(speed: double): void
  +getStrength(): int
  +setStrength(strength: int): void
  +getHealth(): int
  +setHealth(health: int): void
  +displayStatus(): void
}

interface MarioState {
  ~move(mario: Mario): void
  ~jump(mario: Mario): void
  ~attack(mario: Mario): void
  ~takeDamage(mario: Mario): void
  ~collectPowerUp(mario: Mario, powerUp: PowerUp): void
}

abstract class PowerUpDecorator {
  +getHealthBonus(): int
  +getStrengthBonus(): int
  +getSpeedBonus(): double
}

class ShieldDecorator {
  +getHealthBonus(): int
  +getStrengthBonus(): int
  +getSpeedBonus(): double
}

class SmallMario {
  +move(mario: Mario): void
  +jump(mario: Mario): void
  +attack(mario: Mario): void
  +takeDamage(mario: Mario): void
  +collectPowerUp(mario: Mario, powerUp: PowerUp): void
}

class SpeedBoostDecorator {
  +getHealthBonus(): int
  +getStrengthBonus(): int
  +getSpeedBonus(): double
}

class SuperMario {
  +move(mario: Mario): void
  +jump(mario: Mario): void
  +attack(mario: Mario): void
  +takeDamage(mario: Mario): void
  +collectPowerUp(mario: Mario, powerUp: PowerUp): void
}

DoubleJumpDecorator --|> PowerUpDecorator
FireMario ..|> MarioState
FireMario ..> Mario
FlyingDecorator --|> PowerUpDecorator
IceMario ..|> MarioState
IceMario ..> Mario
InvincibleMario ..|> MarioState
InvincibleMario *-- MarioState
InvincibleMario ..> Mario
Mario *-- MarioState
Mario o-- PowerUpDecorator
MarioState ..> Mario
ShieldDecorator --|> PowerUpDecorator
SmallMario ..|> MarioState
SmallMario ..> Mario
SpeedBoostDecorator --|> PowerUpDecorator
SuperMario ..|> MarioState
SuperMario ..> Mario
@enduml